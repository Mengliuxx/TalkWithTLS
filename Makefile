SRC_DIR=src
BIN_DIR=bin
OBJ_DIR=obj

COMMON_DIR=common
SAMPLE_DIR=sample
PERF_DIR=perf

OPENSSL = openssl
WOLFSSL = wolfssl
BORINGSSL = boringssl

# Sample binaries
OPENSSL_SAMPLE_NB_CLNT = openssl_nb_client
OPENSSL_SAMPLE_NB_SERV = openssl_nb_server
OPENSSL_D12_CLNT = openssl_dtls12_client
OPENSSL_D12_SERV = openssl_dtls12_server
OPENSSL_D12_CUSTOM_BIO_CLNT = openssl_dtls12_custom_bio_client
OPENSSL_D12_NB_CLNT = openssl_dtls12_nb_client
OPENSSL_D12_NB_SERV = openssl_dtls12_nb_server
OPENSSL_T12_SERV = openssl_tls12_server
OPENSSL_T12_CLNT = openssl_tls12_client
OPENSSL_T_SERV_MULTI_CLNT = openssl_tls_server_multi_client
OPENSSL_T12_VERF_CB_CLNT = openssl_tls12_verify_cb_client
OPENSSL_T12_VERF_CB_SERV = openssl_tls12_verify_cb_server
OPENSSL_T13_CLNT = openssl_tls13_client
OENSSL_T13_SERV = openssl_tls13_server
OPENSSL_T13_CLNT_BOTH_AUTH = openssl_tls13_client_both_auth
OENSSL_T13_SERV_BOTH_AUTH = openssl_tls13_server_both_auth
OPENSSL_T13_CLNT_DHE = openssl_tls13_dhe_client
OENSSL_T13_SERV_DHE = openssl_tls13_dhe_server
OPENSSL_T13RESUMPTION_CLNT = openssl_tls13_resumption_client
OPENSSL_T13RESUMPTION_SERV = openssl_tls13_resumption_server
WOLFSSL_T13_SERV_SAMPLE = wolfssl_tls13_server
WOLFSSL_T13_CLNT_SAMPLE = wolfssl_tls13_client

# Perf binaries
OPENSSL_ED25519_SIGN_VERI = openssl_ed25519_sign_veri

# Test binaries
TEST_OPENSSL = test_openssl

SAMPLE_BIN=$(BIN_DIR)/$(OPENSSL_SAMPLE_NB_CLNT) \
	$(BIN_DIR)/$(OPENSSL_SAMPLE_NB_SERV) \
	$(BIN_DIR)/$(OPENSSL_D12_CLNT) \
	$(BIN_DIR)/$(OPENSSL_D12_SERV) \
	$(BIN_DIR)/$(OPENSSL_D12_CUSTOM_BIO_CLNT) \
	$(BIN_DIR)/$(OPENSSL_D12_NB_CLNT) \
	$(BIN_DIR)/$(OPENSSL_D12_NB_SERV) \
	$(BIN_DIR)/$(OPENSSL_T12_CLNT) \
    $(BIN_DIR)/$(OPENSSL_T12_SERV) \
    $(BIN_DIR)/$(OPENSSL_T_SERV_MULTI_CLNT) \
    $(BIN_DIR)/$(OPENSSL_T13_CLNT_DHE) \
    $(BIN_DIR)/$(OENSSL_T13_SERV_DHE) \
    $(BIN_DIR)/$(OPENSSL_T12_VERF_CB_CLNT) \
    $(BIN_DIR)/$(OPENSSL_T12_VERF_CB_SERV) \
    $(BIN_DIR)/$(OPENSSL_T13_CLNT) \
    $(BIN_DIR)/$(OENSSL_T13_SERV) \
    $(BIN_DIR)/$(OPENSSL_T13_CLNT_BOTH_AUTH) \
    $(BIN_DIR)/$(OENSSL_T13_SERV_BOTH_AUTH) \
    $(BIN_DIR)/$(OPENSSL_T13RESUMPTION_CLNT) \
    $(BIN_DIR)/$(OPENSSL_T13RESUMPTION_SERV) \
	$(BIN_DIR)/$(WOLFSSL_T13_SERV_SAMPLE) \
	$(BIN_DIR)/$(WOLFSSL_T13_CLNT_SAMPLE)

PERF_BIN_DIR = $(BIN_DIR)/$(PERF_DIR)
PERF_BIN = $(PERF_BIN_DIR)/$(OPENSSL_ED25519_SIGN_VERI)

TEST_BIN=$(BIN_DIR)/$(TEST_OPENSSL)

TARGET=$(SAMPLE_BIN) $(PERF_BIN) $(TEST_BIN)

COMMON_SRC=$(SRC_DIR)/$(COMMON_DIR)
SAMPLE_SRC=$(SRC_DIR)/$(SAMPLE_DIR)
PERF_SRC=$(SRC_DIR)/$(PERF_DIR)
TEST_OPENSSL_DIR=$(SRC_DIR)/test/openssl

COMM_SRC_FILES=$(wildcard $(COMMON_SRC)/*.c)

# Sample Code Srcs
WOLFSSL_T13_SERV_SAMPLE_SRC=$(SAMPLE_SRC)/$(WOLFSSL_T13_SERV_SAMPLE).c $(COMM_SRC_FILES)
WOLFSSL_T13_CLNT_SAMPLE_SRC=$(SAMPLE_SRC)/$(WOLFSSL_T13_CLNT_SAMPLE).c $(COMM_SRC_FILES)
OPENSSL_SAMPLE_NB_CLNT_SRC=$(SAMPLE_SRC)/$(OPENSSL_SAMPLE_NB_CLNT).c $(COMM_SRC_FILES)
OPENSSL_SAMPLE_NB_SERV_SRC=$(SAMPLE_SRC)/$(OPENSSL_SAMPLE_NB_SERV).c $(COMM_SRC_FILES)
OPENSSL_D12_CLNT_SRC=$(SAMPLE_SRC)/$(OPENSSL_D12_CLNT).c $(COMM_SRC_FILES)
OPENSSL_D12_SERV_SRC=$(SAMPLE_SRC)/$(OPENSSL_D12_SERV).c $(COMM_SRC_FILES)
OPENSSL_D12_CUSTOM_BIO_CLNT_SRC=$(SAMPLE_SRC)/$(OPENSSL_D12_CUSTOM_BIO_CLNT).c $(COMM_SRC_FILES)
OPENSSL_D12_NB_CLNT_SRC=$(SAMPLE_SRC)/$(OPENSSL_D12_NB_CLNT).c $(COMM_SRC_FILES)
OPENSSL_D12_NB_SERV_SRC=$(SAMPLE_SRC)/$(OPENSSL_D12_NB_SERV).c $(COMM_SRC_FILES)
OPENSSL_T12_SERV_SRC=$(SAMPLE_SRC)/$(OPENSSL_T12_SERV).c $(COMM_SRC_FILES)
OPENSSL_T12_CLNT_SRC=$(SAMPLE_SRC)/$(OPENSSL_T12_CLNT).c $(COMM_SRC_FILES)
OPENSSL_T_SERV_MULTI_CLNT_SRC=$(SAMPLE_SRC)/$(OPENSSL_T_SERV_MULTI_CLNT).c $(COMM_SRC_FILES)
OPENSSL_T12_VERF_CB_CLNT_SRC=$(SAMPLE_SRC)/$(OPENSSL_T12_VERF_CB_CLNT).c $(COMM_SRC_FILES)
OPENSSL_T12_VERF_CB_SERV_SRC=$(SAMPLE_SRC)/$(OPENSSL_T12_VERF_CB_SERV).c $(COMM_SRC_FILES)
OPENSSL_T13_CLNT_SRC=$(SAMPLE_SRC)/$(OPENSSL_T13_CLNT).c $(COMM_SRC_FILES)
OENSSL_T13_SERV_SRC=$(SAMPLE_SRC)/$(OENSSL_T13_SERV).c $(COMM_SRC_FILES)
OPENSSL_T13_CLNT_BOTH_AUTH_SRC=$(SAMPLE_SRC)/$(OPENSSL_T13_CLNT_BOTH_AUTH).c $(COMM_SRC_FILES)
OENSSL_T13_SERV_BOTH_AUTH_SRC=$(SAMPLE_SRC)/$(OENSSL_T13_SERV_BOTH_AUTH).c $(COMM_SRC_FILES)
OPENSSL_T13_CLNT_DHE_SRC=$(SAMPLE_SRC)/$(OPENSSL_T13_CLNT_DHE).c $(COMM_SRC_FILES)
OENSSL_T13_SERV_DHE_SRC=$(SAMPLE_SRC)/$(OENSSL_T13_SERV_DHE).c $(COMM_SRC_FILES)
OPENSSL_T13RESUMPTION_CLNT_SRC=$(SAMPLE_SRC)/$(OPENSSL_T13RESUMPTION_CLNT).c $(COMM_SRC_FILES)
OPENSSL_T13RESUMPTION_SERV_SRC=$(SAMPLE_SRC)/$(OPENSSL_T13RESUMPTION_SERV).c $(COMM_SRC_FILES)

# Perf Code Srcs
OPENSSL_ED25519_SIGN_VERI_SRC=$(PERF_SRC)/$(OPENSSL_ED25519_SIGN_VERI).c $(COMM_SRC_FILES)

# Test code Srcs
TEST_OPENSSL_SRC=$(wildcard $(TEST_OPENSSL_DIR)/*.c) $(COMM_SRC_FILES)

# Sample Code Objs
WOLFSSL_T13_SERV_SAMPLE_OBJ=$(addprefix $(OBJ_DIR)/,$(WOLFSSL_T13_SERV_SAMPLE_SRC:.c=.o))
WOLFSSL_T13_CLNT_SAMPLE_OBJ=$(addprefix $(OBJ_DIR)/,$(WOLFSSL_T13_CLNT_SAMPLE_SRC:.c=.o))
OPENSSL_SAMPLE_NB_CLNT_OBJ=$(addprefix $(OBJ_DIR)/,$(OPENSSL_SAMPLE_NB_CLNT_SRC:.c=.o))
OPENSSL_SAMPLE_NB_SERV_OBJ=$(addprefix $(OBJ_DIR)/,$(OPENSSL_SAMPLE_NB_SERV_SRC:.c=.o))
OPENSSL_D12_CLNT_OBJ=$(addprefix $(OBJ_DIR)/,$(OPENSSL_D12_CLNT_SRC:.c=.o))
OPENSSL_D12_SERV_OBJ=$(addprefix $(OBJ_DIR)/,$(OPENSSL_D12_SERV_SRC:.c=.o))
OPENSSL_D12_CUSTOM_BIO_CLNT_OBJ=$(addprefix $(OBJ_DIR)/,$(OPENSSL_D12_CUSTOM_BIO_CLNT_SRC:.c=.o))
OPENSSL_D12_NB_CLNT_OBJ=$(addprefix $(OBJ_DIR)/,$(OPENSSL_D12_NB_CLNT_SRC:.c=.o))
OPENSSL_D12_NB_SERV_OBJ=$(addprefix $(OBJ_DIR)/,$(OPENSSL_D12_NB_SERV_SRC:.c=.o))

OPENSSL_T12_CLNT_OBJ=$(addprefix $(OBJ_DIR)/,$(OPENSSL_T12_CLNT_SRC:.c=.o))
OPENSSL_T12_SERV_OBJ=$(addprefix $(OBJ_DIR)/,$(OPENSSL_T12_SERV_SRC:.c=.o))
OPENSSL_T_SERV_MULTI_CLNT_OBJ=$(addprefix $(OBJ_DIR)/,$(OPENSSL_T_SERV_MULTI_CLNT_SRC:.c=.o))
OPENSSL_T12_VERF_CB_CLNT_OBJ=$(addprefix $(OBJ_DIR)/,$(OPENSSL_T12_VERF_CB_CLNT_SRC:.c=.o))
OPENSSL_T12_VERF_CB_SERV_OBJ=$(addprefix $(OBJ_DIR)/,$(OPENSSL_T12_VERF_CB_SERV_SRC:.c=.o))
OPENSSL_T13_CLNT_OBJ=$(addprefix $(OBJ_DIR)/,$(OPENSSL_T13_CLNT_SRC:.c=.o))
OENSSL_T13_SERV_OBJ=$(addprefix $(OBJ_DIR)/,$(OENSSL_T13_SERV_SRC:.c=.o))
OPENSSL_T13_CLNT_BOTH_AUTH_OBJ=$(addprefix $(OBJ_DIR)/,$(OPENSSL_T13_CLNT_BOTH_AUTH_SRC:.c=.o))
OENSSL_T13_SERV_BOTH_AUTH_OBJ=$(addprefix $(OBJ_DIR)/,$(OENSSL_T13_SERV_BOTH_AUTH_SRC:.c=.o))
OPENSSL_T13_CLNT_DHE_OBJ=$(addprefix $(OBJ_DIR)/,$(OPENSSL_T13_CLNT_DHE_SRC:.c=.o))
OENSSL_T13_SERV_DHE_OBJ=$(addprefix $(OBJ_DIR)/,$(OENSSL_T13_SERV_DHE_SRC:.c=.o))
OPENSSL_T13RESUMPTION_SERV_OBJ=$(addprefix $(OBJ_DIR)/,$(OPENSSL_T13RESUMPTION_SERV_SRC:.c=.o))
OPENSSL_T13RESUMPTION_CLNT_OBJ=$(addprefix $(OBJ_DIR)/,$(OPENSSL_T13RESUMPTION_CLNT_SRC:.c=.o))

# Perf Code Objs
OPENSSL_ED25519_SIGN_VERI_OBJ=$(addprefix $(OBJ_DIR)/,$(OPENSSL_ED25519_SIGN_VERI_SRC:.c=.o))

# Test code Objs
TEST_OPENSSL_OBJ=$(addprefix $(OBJ_DIR)/,$(TEST_OPENSSL_SRC:.c=.o))

DEPENDENCY_DIR=dependency
OPENSSL_1_1_1=openssl-1.1.1c

ifneq ($(OSSL111_PATH),)
	OPENSSL_1_1_1_DIR=$(OSSL111_PATH)
else
	OPENSSL_1_1_1_DIR=$(DEPENDENCY_DIR)/$(OPENSSL_1_1_1)
endif

OPENSSL_1_1_1_LIBS=$(OPENSSL_1_1_1_DIR)/libssl.a

WOLFSSL_MASTER=wolfssl-master
WOLFSSL_DIR=$(DEPENDENCY_DIR)/$(WOLFSSL_MASTER)
WOLFSSL_LIBS=$(WOLFSSL_DIR)/src/.libs/libwolfssl.so

BSSL_CHROMIUM=boringssl_chromium
BSSL_CHROMIUM_DIR=$(DEPENDENCY_DIR)/$(BSSL_CHROMIUM)
BSSL_CHROMIUM_LIBS=$(BSSL_CHROMIUM)/build/ssl/libssl.a

DEPENDENCY = $(OPENSSL_1_1_1_LIBS) $(WOLFSSL_LIBS)

# Enable address sanitizer by default
ADDRSAN=1

ifeq ($(ADDRSAN),1)
	SANFLAGS = -fsanitize=address -static-libasan
endif
ifeq ($(NOSAN),1)
	SANFLAGS =
endif

CFLAGS = -g -ggdb -Wall -Werror -fstack-protector-all $(SANFLAGS) -I $(COMMON_SRC)
OPENSSL_CFLAGS = $(CFLAGS) -I $(OPENSSL_1_1_1_DIR)/include
WOLFSSL_CFLAGS = $(CFLAGS) -I $(WOLFSSL_DIR)
#TEST_OPENSSL_CFLAGS = -I $(TEST_OPENSSL_DIR)

LDFLAGS = $(OPENSSL_1_1_1_DIR)/libssl.a $(OPENSSL_1_1_1_DIR)/libcrypto.a -lpthread -ldl $(SANFLAGS)
WOLFSSL_LDFLAGS = -L $(BIN_DIR) -lwolfssl $(SANFLAGS)

OSSL_CC="gcc -Wall -Werror -fstack-protector-all $(SANFLAGS)"

CC = gcc
CP = cp
RM = rm

#.PHONY all init_task clean

all : init_task $(TARGET)

test : init_task $(TEST_BIN)

$(OBJ_DIR)/$(COMMON_SRC)%.o:$(COMMON_SRC)%.c
	$(CC) $(CFLAGS) -c $< -o $@

$(OBJ_DIR)/$(SAMPLE_SRC)/$(OPENSSL)%.o:$(SAMPLE_SRC)/$(OPENSSL)%.c
	$(CC) $(OPENSSL_CFLAGS) -c $< -o $@

$(OBJ_DIR)/$(SAMPLE_SRC)/$(WOLFSSL)%.o:$(SAMPLE_SRC)/$(WOLFSSL)%.c
	$(CC) $(WOLFSSL_CFLAGS) -c $< -o $@

$(OBJ_DIR)/$(PERF_SRC)/$(OPENSSL)%.o:$(PERF_SRC)/$(OPENSSL)%.c
	$(CC) $(OPENSSL_CFLAGS) -c $< -o $@

$(OBJ_DIR)/$(TEST_OPENSSL_DIR)/%.o:$(TEST_OPENSSL_DIR)/%.c
	$(CC) $(OPENSSL_CFLAGS) $(TEST_OPENSSL_CFLAGS) -c $< -o $@

build_dependency:$(DEPENDENCY)

#TODO Add build for OpenSSL-master
#TODO Generate exes from different openssl version
#TODO Better to avoid using DEPENDENCY_DIR instead use generic way while untaring

$(OPENSSL_1_1_1_LIBS):
	@echo "Building $(OPENSSL_1_1_1_DIR)..."
	@if [ -f $(OPENSSL_1_1_1_DIR).tar.gz ]; then \
		cd $(DEPENDENCY_DIR) && tar -zxvf $(OPENSSL_1_1_1).tar.gz > /dev/null; fi
	@cd $(OPENSSL_1_1_1_DIR) && export CC=$(OSSL_CC) && ./config -d > /dev/null
	@cd $(OPENSSL_1_1_1_DIR) && make > /dev/null

WOLFSSL_CONF_ARGS=--enable-tls13 --enable-harden --enable-debug

$(WOLFSSL_LIBS):
	@echo "Building $(WOLFSSL_DIR)..."
	@cd $(WOLFSSL_DIR) && autoreconf -i > /dev/null
	@cd $(WOLFSSL_DIR) && ./configure $(WOLFSSL_CONF_ARGS) > /dev/null
	@cd $(WOLFSSL_DIR) && make

$(BSSL_CHROMIUM_LIBS):
	@echo "Building $(BSSL_CHROMIUM)..."
	@mkdir -p $(BSSL_CHROMIUM_DIR)/build
	@cd $(DEPENDENCY_DIR) && tar -zxvf $(BSSL_CHROMIUM).tar.gz -C $(BSSL_CHROMIUM) > /dev/null
	@cd $(BSSL_CHROMIUM_DIR)/build && cmake .. > /dev/null && make > /dev/null

init_task: build_dependency
	@mkdir -p $(BIN_DIR)
	@mkdir -p $(BIN_DIR)/$(SAMPLE_DIR)
	@mkdir -p $(BIN_DIR)/$(PERF_DIR)
	@mkdir -p $(OBJ_DIR)
	@mkdir -p $(OBJ_DIR)/$(COMMON_SRC)
	@mkdir -p $(OBJ_DIR)/$(SAMPLE_SRC)
	@mkdir -p $(OBJ_DIR)/$(PERF_SRC)
	@mkdir -p $(OBJ_DIR)/$(TEST_OPENSSL_DIR)
	@cp $(WOLFSSL_LIBS)* $(BIN_DIR)

$(BIN_DIR)/$(OPENSSL_SAMPLE_NB_CLNT):$(OPENSSL_SAMPLE_NB_CLNT_OBJ)
	$(CC) $^ $(LDFLAGS) -o $@

$(BIN_DIR)/$(OPENSSL_SAMPLE_NB_SERV):$(OPENSSL_SAMPLE_NB_SERV_OBJ)
	$(CC) $^ $(LDFLAGS) -o $@

$(BIN_DIR)/$(OPENSSL_D12_CLNT):$(OPENSSL_D12_CLNT_OBJ)
	$(CC) $^ $(LDFLAGS) -o $@

$(BIN_DIR)/$(OPENSSL_D12_NB_SERV):$(OPENSSL_D12_NB_SERV_OBJ)
	$(CC) $^ $(LDFLAGS) -o $@

$(BIN_DIR)/$(OPENSSL_D12_NB_CLNT):$(OPENSSL_D12_NB_CLNT_OBJ)
	$(CC) $^ $(LDFLAGS) -o $@

$(BIN_DIR)/$(OPENSSL_D12_SERV):$(OPENSSL_D12_SERV_OBJ)
	$(CC) $^ $(LDFLAGS) -o $@

$(BIN_DIR)/$(OPENSSL_D12_CUSTOM_BIO_CLNT):$(OPENSSL_D12_CUSTOM_BIO_CLNT_OBJ)
	$(CC) $^ $(LDFLAGS) -o $@

$(BIN_DIR)/$(OPENSSL_T13RESUMPTION_SERV):$(OPENSSL_T13RESUMPTION_SERV_OBJ)
	$(CC) $^ $(LDFLAGS) -o $@

$(BIN_DIR)/$(OPENSSL_T13RESUMPTION_CLNT):$(OPENSSL_T13RESUMPTION_CLNT_OBJ)
	$(CC) $^ $(LDFLAGS) -o $@

$(BIN_DIR)/$(OENSSL_T13_SERV_DHE):$(OENSSL_T13_SERV_DHE_OBJ)
	$(CC) $^ $(LDFLAGS) -o $@

$(BIN_DIR)/$(OPENSSL_T13_CLNT_DHE):$(OPENSSL_T13_CLNT_DHE_OBJ)
	$(CC) $^ $(LDFLAGS) -o $@

$(BIN_DIR)/$(OPENSSL_T13_CLNT):$(OPENSSL_T13_CLNT_OBJ)
	$(CC) $^ $(LDFLAGS) -o $@

$(BIN_DIR)/$(OENSSL_T13_SERV):$(OENSSL_T13_SERV_OBJ)
	$(CC) $^ $(LDFLAGS) -o $@

$(BIN_DIR)/$(OPENSSL_T13_CLNT_BOTH_AUTH):$(OPENSSL_T13_CLNT_BOTH_AUTH_OBJ)
	$(CC) $^ $(LDFLAGS) -o $@

$(BIN_DIR)/$(OENSSL_T13_SERV_BOTH_AUTH):$(OENSSL_T13_SERV_BOTH_AUTH_OBJ)
	$(CC) $^ $(LDFLAGS) -o $@

$(BIN_DIR)/$(OPENSSL_T12_CLNT):$(OPENSSL_T12_CLNT_OBJ)
	$(CC) $^ $(LDFLAGS) -o $@

$(BIN_DIR)/$(OPENSSL_T12_SERV):$(OPENSSL_T12_SERV_OBJ)
	$(CC) $^ $(LDFLAGS) -o $@

$(BIN_DIR)/$(OPENSSL_T_SERV_MULTI_CLNT):$(OPENSSL_T_SERV_MULTI_CLNT_OBJ)
	$(CC) $^ $(LDFLAGS) -o $@

$(BIN_DIR)/$(OPENSSL_T12_VERF_CB_CLNT):$(OPENSSL_T12_VERF_CB_CLNT_OBJ)
	$(CC) $^ $(LDFLAGS) -o $@

$(BIN_DIR)/$(OPENSSL_T12_VERF_CB_SERV):$(OPENSSL_T12_VERF_CB_SERV_OBJ)
	$(CC) $^ $(LDFLAGS) -o $@

$(BIN_DIR)/$(WOLFSSL_T13_SERV_SAMPLE):$(WOLFSSL_T13_SERV_SAMPLE_OBJ)
	$(CC) $^ $(WOLFSSL_LDFLAGS) -o $@

$(BIN_DIR)/$(WOLFSSL_T13_CLNT_SAMPLE):$(WOLFSSL_T13_CLNT_SAMPLE_OBJ)
	$(CC) $^ $(WOLFSSL_LDFLAGS) -o $@

$(PERF_BIN_DIR)/$(OPENSSL_ED25519_SIGN_VERI):$(OPENSSL_ED25519_SIGN_VERI_OBJ)
	$(CC) $^ $(LDFLAGS) -o $@

$(BIN_DIR)/$(TEST_OPENSSL):$(TEST_OPENSSL_OBJ)
	$(CC) $^ $(LDFLAGS) -o $@

clean:
	@$(RM) -rf *.o *.a
	@$(RM) -rf $(TARGET)
	@$(RM) -rf $(OBJ_DIR) $(BIN_DIR)

clobber: clean
	@cd $(OPENSSL_1_1_1_DIR) && make clean > /dev/null
	@cd $(WOLFSSL_DIR) && make clean > /dev/null
